#!/bin/bash

# c0lby:

#####################################################
##############  DO NOT EDIT THIS FILE  ##############
#####################################################

copyright=

while getopts "c:" object; do
	case "${object}" in
		c) copyright="${OPTARG}" ;;
	esac
done
shift $((OPTIND-1))

#### Get Values from Info.plist ####

# Get the BundleShortVersionString (Version Number) from from Info.plist and set to a variable
versionNumber=$(/usr/libexec/PlistBuddy -c "Print :CFBundleShortVersionString" "Info.plist")

# Get the BundleVersion (Build Number) from from Info.plist and set to a variable
buildNumber=$(/usr/libexec/PlistBuddy -c "Print :CFBundleVersion" "Info.plist")

# Get the SVN Version (Revision) of the Solution and set to a variable
svnVersion=$(/usr/bin/svnversion "${SolutionDir}")


#### Create Some variables to create hold our Preference node values ####
nodeKey=
nodeEntry=
nodeTitle=
nodeValue=
nodeDefault=


# Set up a counter to increment the index of the PreferenceSpecifiers
nodeIndex=-0

# A funciton for incrementing the counter
incrementNodeIndex ()
{
	increment=$((nodeIndex+1))
	nodeIndex=$increment
	return
}


PreparePreferenceFile ()
{
	/usr/libexec/PlistBuddy -c "Clear dict" "Settings.bundle/Root.plist"
	/usr/libexec/PlistBuddy -c "Add :PreferenceSpecifiers array" "Settings.bundle/Root.plist"
}


AddNewDictionaryNode ()
{
	incrementNodeIndex
	/usr/libexec/PlistBuddy -c "Add :PreferenceSpecifiers:$nodeIndex dict" "Settings.bundle/Root.plist"
}


AddNewStringNode ()
{
	local OPTIND

	while getopts "e:v:" o; do
		case "${o}" in
			e) nodeEntry="${OPTARG}" ;;
			v) nodeValue="${OPTARG}" ;;
		esac
	done

	shift $((OPTIND-1))

	/usr/libexec/PlistBuddy -c "Add :PreferenceSpecifiers:$nodeIndex:$nodeEntry string $nodeValue" "Settings.bundle/Root.plist"
}

AddNewBoolNode ()
{
	local OPTIND

	while getopts "e:v:" o; do
		case "${o}" in
			e) nodeEntry="${OPTARG}" ;;
			v) nodeValue="${OPTARG}" ;;
		esac
	done

	shift $((OPTIND-1))

	/usr/libexec/PlistBuddy -c "Add :PreferenceSpecifiers:$nodeIndex:$nodeEntry bool $nodeValue" "Settings.bundle/Root.plist"
}


AddNewArrayNode ()
{
	local OPTIND

	while getopts "e:" o; do
		case "${o}" in
			e) nodeEntry="${OPTARG}" ;;
		esac
	done

	shift $((OPTIND-1))

	/usr/libexec/PlistBuddy -c "Add :PreferenceSpecifiers:$nodeIndex:$nodeEntry array" "Settings.bundle/Root.plist"
}


AddNewPreferenceGroup()
{
	local OPTIND

	while getopts "t:" o; do
		case "${o}" in
			t) nodeTitle="${OPTARG}" ;;
		esac
	done

	shift $((OPTIND-1))

	AddNewDictionaryNode
	AddNewStringNode -e Type 	-v PSGroupSpecifier
	AddNewStringNode -e Title  	-v "${nodeTitle}"
}


AddNewTitleValuePreference ()
{
	local OPTIND

	while getopts "k:d:t:" o; do
		case "${o}" in
			k) nodeKey="${OPTARG}" ;;
			d) nodeDefault="${OPTARG}" ;;
			t) nodeTitle="${OPTARG}" ;;
		esac
	done

	shift $((OPTIND-1))

	AddNewDictionaryNode
	AddNewStringNode -e Type 	-v PSTitleValueSpecifier

	AddNewStringNode -e Key  			-v "${nodeKey}"
	AddNewStringNode -e DefaultValue  	-v "${nodeDefault}"
	AddNewStringNode -e Title  			-v "${nodeTitle}"
}


AddNewTextFieldPreference ()
{
	local OPTIND

	while getopts "k:d:t:" o; do
		case "${o}" in
			k) nodeKey="${OPTARG}" ;;
			d) nodeDefault="${OPTARG}" ;;
			t) nodeTitle="${OPTARG}" ;;
		esac
	done

	shift $((OPTIND-1))

	AddNewDictionaryNode
	AddNewStringNode -e Type 	-v PSTextFieldSpecifier

	AddNewStringNode -e Key  			-v "${nodeKey}"
	AddNewStringNode -e DefaultValue  	-v "${nodeDefault}"
	AddNewStringNode -e Title  			-v "${nodeTitle}"
	AddNewStringNode -e KeyboardType	-v URL
}




AddNewMultiValuePreference ()
{
	local OPTIND

	while getopts "k:d:t:" o; do
		case "${o}" in
			k) nodeKey="${OPTARG}" ;;
			d) nodeDefault="${OPTARG}" ;;
			t) nodeTitle="${OPTARG}" ;;
		esac
	done

	shift $((OPTIND-1))

	AddNewDictionaryNode
	AddNewStringNode -e Type 	-v PSMultiValueSpecifier

	AddNewStringNode -e Key  			-v "${nodeKey}"
	AddNewStringNode -e DefaultValue  	-v "${nodeDefault}"
	AddNewStringNode -e Title  			-v "${nodeTitle}"
}


SetMultiValuePreferenceTitles ()
{
	AddNewArrayNode  -e Titles

	counter=0

	for var; do
		AddNewStringNode  -e Titles:$counter  -v "${var}"
		counter=$((counter+1))
	done
}


SetMultiValuePreferenceValues ()
{
	AddNewArrayNode  -e Values

	counter=0

	for var; do
		AddNewStringNode  -e Values:$counter  -v "${var}"
		counter=$((counter+1))
	done

}

AddNewToggleSwitchPreference ()
{
	local OPTIND

	while getopts "k:d:t:" o; do
		case "${o}" in
			k) nodeKey="${OPTARG}" ;;
			d) nodeDefault="${OPTARG}" ;;
			t) nodeTitle="${OPTARG}" ;;
		esac
	done

	shift $((OPTIND-1))

	AddNewDictionaryNode
	AddNewStringNode -e Type 	-v PSToggleSwitchSpecifier

	AddNewStringNode -e Key  			-v "${nodeKey}"
	AddNewBoolNode	 -e DefaultValue  	-v "${nodeDefault}"
	AddNewStringNode -e Title  			-v "${nodeTitle}"
}